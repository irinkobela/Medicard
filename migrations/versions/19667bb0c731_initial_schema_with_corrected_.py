"""Initial schema with corrected relationships

Revision ID: 19667bb0c731
Revises: 
Create Date: 2025-06-06 03:09:18.274399

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '19667bb0c731'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cds_rules',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('rule_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rule_type', sa.String(length=100), nullable=False),
    sa.Column('rule_logic', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_name')
    )
    with op.batch_alter_table('cds_rules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cds_rules_rule_type'), ['rule_type'], unique=False)

    op.create_table('orderable_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('generic_name', sa.String(length=255), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('parent_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['orderable_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orderable_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orderable_items_name'), ['name'], unique=False)

    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('token_blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blacklist_jti'), ['jti'], unique=True)

    op.create_table('user_groups',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_groups_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('hashed_password', sa.String(length=200), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_ldap_user', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.String(length=120), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('password_reset_token', sa.String(length=100), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_password_reset_token'), ['password_reset_token'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('patients',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('mrn', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('attending_physician_id', sa.Integer(), nullable=True),
    sa.Column('code_status', sa.String(length=50), nullable=True),
    sa.Column('isolation_precautions', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('admission_date', sa.DateTime(), nullable=True),
    sa.Column('discharge_date', sa.DateTime(), nullable=True),
    sa.Column('known_cad', sa.Boolean(), nullable=True),
    sa.Column('congestive_heart_failure', sa.Boolean(), nullable=True),
    sa.Column('hypertension', sa.Boolean(), nullable=True),
    sa.Column('diabetes', sa.Boolean(), nullable=True),
    sa.Column('stroke_or_tia', sa.Boolean(), nullable=True),
    sa.Column('vascular_disease', sa.Boolean(), nullable=True),
    sa.Column('atrial_fibrillation', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['attending_physician_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_patients_mrn'), ['mrn'], unique=True)

    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user_group_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('provider_user_id', sa.Integer(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('appointment_type', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False, comment='Valid values: Scheduled, Confirmed, CancelledByPatient, CancelledByClinic, Completed, NoShow, Rescheduled'),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('reason_for_visit', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['provider_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_appointments_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_provider_user_id'), ['provider_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_start_datetime'), ['start_datetime'], unique=False)
        batch_op.create_index(batch_op.f('ix_appointments_status'), ['status'], unique=False)

    op.create_table('clinical_notes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('author_user_id', sa.Integer(), nullable=False),
    sa.Column('note_type', sa.String(length=100), nullable=False),
    sa.Column('service_specialty', sa.String(length=100), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('content_text', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('signed_at', sa.DateTime(), nullable=True),
    sa.Column('signed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('co_signed_at', sa.DateTime(), nullable=True),
    sa.Column('co_signed_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['co_signed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['signed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discharge_plans',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('discharge_goals', sa.Text(), nullable=True),
    sa.Column('followup_plan', sa.Text(), nullable=True),
    sa.Column('discharge_medications_summary', sa.Text(), nullable=True),
    sa.Column('discharge_needs', sa.Text(), nullable=True),
    sa.Column('anticipated_discharge_date', sa.DateTime(), nullable=True),
    sa.Column('barriers_to_discharge', sa.Text(), nullable=True),
    sa.Column('family_or_caregiver_notes', sa.Text(), nullable=True),
    sa.Column('transportation_needs', sa.String(length=100), nullable=True),
    sa.Column('home_environment_safety_notes', sa.Text(), nullable=True),
    sa.Column('post_discharge_instructions', sa.Text(), nullable=True),
    sa.Column('equipment_needed', sa.Text(), nullable=True),
    sa.Column('social_work_consult_ordered', sa.Boolean(), nullable=True),
    sa.Column('case_management_consult_ordered', sa.Boolean(), nullable=True),
    sa.Column('physical_therapy_consult_ordered', sa.Boolean(), nullable=True),
    sa.Column('occupational_therapy_consult_ordered', sa.Boolean(), nullable=True),
    sa.Column('speech_therapy_consult_ordered', sa.Boolean(), nullable=True),
    sa.Column('nutrition_consult_ordered', sa.Boolean(), nullable=True),
    sa.Column('nursing_summary', sa.Text(), nullable=True),
    sa.Column('therapy_summary', sa.Text(), nullable=True),
    sa.Column('care_coordination_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('discharge_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_discharge_plans_patient_id'), ['patient_id'], unique=False)

    op.create_table('handoff_entries',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('written_by_user_id', sa.Integer(), nullable=False),
    sa.Column('written_at', sa.DateTime(), nullable=False),
    sa.Column('current_condition', sa.Text(), nullable=True),
    sa.Column('active_issues', sa.Text(), nullable=True),
    sa.Column('overnight_events', sa.Text(), nullable=True),
    sa.Column('anticipatory_guidance', sa.Text(), nullable=True),
    sa.Column('plan_for_next_shift', sa.Text(), nullable=True),
    sa.Column('vital_signs_summary', sa.Text(), nullable=True),
    sa.Column('medications_changes_summary', sa.Text(), nullable=True),
    sa.Column('labs_pending_summary', sa.Text(), nullable=True),
    sa.Column('consults_pending_summary', sa.Text(), nullable=True),
    sa.Column('allergies_summary_at_handoff', sa.Text(), nullable=True),
    sa.Column('code_status_at_handoff', sa.String(length=50), nullable=True),
    sa.Column('isolation_precautions_at_handoff', sa.String(length=100), nullable=True),
    sa.Column('handoff_priority', sa.String(length=50), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['written_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('handoff_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_handoff_entries_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_handoff_entries_written_by_user_id'), ['written_by_user_id'], unique=False)

    op.create_table('imaging_reports',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('ordered_study_id', sa.String(length=36), nullable=True),
    sa.Column('modality', sa.String(length=50), nullable=False),
    sa.Column('study_description', sa.String(length=255), nullable=False),
    sa.Column('study_datetime', sa.DateTime(), nullable=False),
    sa.Column('report_text', sa.Text(), nullable=True),
    sa.Column('impression_text', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('reported_by_user_id', sa.Integer(), nullable=True),
    sa.Column('report_datetime', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['acknowledged_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ordered_study_id'], ['orderable_items.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['reported_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lab_results',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('ordered_test_id', sa.String(length=36), nullable=True),
    sa.Column('test_name', sa.String(length=255), nullable=False),
    sa.Column('panel_name', sa.String(length=255), nullable=True),
    sa.Column('value', sa.String(length=100), nullable=True),
    sa.Column('value_numeric', sa.Float(), nullable=True),
    sa.Column('units', sa.String(length=50), nullable=True),
    sa.Column('reference_range', sa.String(length=100), nullable=True),
    sa.Column('abnormal_flag', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('collection_datetime', sa.DateTime(), nullable=False),
    sa.Column('result_datetime', sa.DateTime(), nullable=True),
    sa.Column('performing_lab', sa.String(length=100), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['acknowledged_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ordered_test_id'], ['orderable_items.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medication_reconciliation_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('reconciliation_type', sa.String(length=50), nullable=False),
    sa.Column('reconciled_by_user_id', sa.Integer(), nullable=False),
    sa.Column('reconciliation_datetime', sa.DateTime(), nullable=False),
    sa.Column('decisions_log', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['reconciled_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('medication_reconciliation_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_medication_reconciliation_logs_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_medication_reconciliation_logs_reconciliation_type'), ['reconciliation_type'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('recipient_user_id', sa.Integer(), nullable=False),
    sa.Column('related_patient_id', sa.String(length=36), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.String(length=100), nullable=False, comment='E.g., CRITICAL_LAB, TASK_DUE, NEW_CONSULT, ORDER_SIGN'),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('link_to_item_type', sa.String(length=50), nullable=True, comment="E.g., 'Patient', 'Order', 'Task', 'LabResult'"),
    sa.Column('link_to_item_id', sa.String(length=36), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True, comment='Optional structured payload for frontend logic'),
    sa.Column('is_urgent', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['related_patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_notification_type'), ['notification_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_recipient_user_id'), ['recipient_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_related_patient_id'), ['related_patient_id'], unique=False)

    op.create_table('orders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('orderable_item_id', sa.String(length=36), nullable=False),
    sa.Column('order_details', sa.JSON(), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('ordering_physician_id', sa.Integer(), nullable=False),
    sa.Column('order_placed_at', sa.DateTime(), nullable=True),
    sa.Column('signed_at', sa.DateTime(), nullable=True),
    sa.Column('signed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('discontinued_at', sa.DateTime(), nullable=True),
    sa.Column('discontinued_by_user_id', sa.Integer(), nullable=True),
    sa.Column('discontinuation_reason', sa.Text(), nullable=True),
    sa.Column('reviewed_by_nurse_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('administration_instructions', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_critical', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['discontinued_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['orderable_item_id'], ['orderable_items.id'], ),
    sa.ForeignKeyConstraint(['ordering_physician_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_nurse_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['signed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient_allergies',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('allergen_name', sa.String(length=255), nullable=False),
    sa.Column('reaction_description', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=50), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('recorded_by_user_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['recorded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient_flags',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('flagged_by_user_id', sa.Integer(), nullable=False),
    sa.Column('flag_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['flagged_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('patient_flags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_patient_flags_flag_type'), ['flag_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_patient_flags_patient_id'), ['patient_id'], unique=False)

    op.create_table('patient_problem_list',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('icd10_code', sa.String(length=20), nullable=True),
    sa.Column('problem_description', sa.Text(), nullable=False),
    sa.Column('onset_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('recorded_by_user_id', sa.Integer(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['recorded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rounding_notes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('rounding_physician_id', sa.Integer(), nullable=False),
    sa.Column('rounding_datetime', sa.DateTime(), nullable=True),
    sa.Column('subjective', sa.Text(), nullable=True),
    sa.Column('objective', sa.Text(), nullable=True),
    sa.Column('assessment', sa.Text(), nullable=True),
    sa.Column('plan', sa.Text(), nullable=True),
    sa.Column('is_finalized', sa.Boolean(), nullable=True),
    sa.Column('reviewed_by_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['rounding_physician_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=True),
    sa.Column('assigned_to_user_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_datetime', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_urgent', sa.Boolean(), nullable=True),
    sa.Column('visibility', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tasks_patient_id'), ['patient_id'], unique=False)

    op.create_table('vital_signs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('recorded_at', sa.DateTime(), nullable=False),
    sa.Column('recorded_by_user_id', sa.Integer(), nullable=True),
    sa.Column('temperature_celsius', sa.Float(), nullable=True),
    sa.Column('heart_rate_bpm', sa.Integer(), nullable=True),
    sa.Column('respiratory_rate_rpm', sa.Integer(), nullable=True),
    sa.Column('systolic_bp_mmhg', sa.Integer(), nullable=True),
    sa.Column('diastolic_bp_mmhg', sa.Integer(), nullable=True),
    sa.Column('oxygen_saturation_percent', sa.Float(), nullable=True),
    sa.Column('pain_score_0_10', sa.Integer(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('blood_glucose_mg_dl', sa.Integer(), nullable=True),
    sa.Column('blood_glucose_mmol_l', sa.Float(), nullable=True),
    sa.Column('blood_glucose_type', sa.String(length=50), nullable=True),
    sa.Column('consciousness_level', sa.String(length=100), nullable=True),
    sa.Column('patient_position', sa.String(length=50), nullable=True),
    sa.Column('activity_level', sa.String(length=50), nullable=True),
    sa.Column('o2_therapy_device', sa.String(length=100), nullable=True),
    sa.Column('o2_flow_rate_lpm', sa.Float(), nullable=True),
    sa.Column('fio2_percent', sa.Float(), nullable=True),
    sa.Column('troponin_ng_l', sa.Float(), nullable=True),
    sa.Column('creatinine_umol_l', sa.Float(), nullable=True),
    sa.Column('ecg_changes', sa.String(length=200), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['recorded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vital_signs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vital_signs_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vital_signs_recorded_at'), ['recorded_at'], unique=False)

    op.create_table('patient_medications',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('patient_id', sa.String(length=36), nullable=False),
    sa.Column('orderable_item_id', sa.String(length=36), nullable=True),
    sa.Column('medication_name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('dose', sa.String(length=100), nullable=True),
    sa.Column('route', sa.String(length=50), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=True),
    sa.Column('prn_reason', sa.String(length=255), nullable=True),
    sa.Column('indication', sa.String(length=255), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=True),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('source_of_information', sa.String(length=100), nullable=True),
    sa.Column('last_taken_datetime', sa.DateTime(), nullable=True),
    sa.Column('recorded_by_user_id', sa.Integer(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('source_order_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['orderable_item_id'], ['orderable_items.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['recorded_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['source_order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('patient_medications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_patient_medications_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_patient_medications_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_patient_medications_type'), ['type'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('patient_medications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patient_medications_type'))
        batch_op.drop_index(batch_op.f('ix_patient_medications_status'))
        batch_op.drop_index(batch_op.f('ix_patient_medications_patient_id'))

    op.drop_table('patient_medications')
    with op.batch_alter_table('vital_signs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vital_signs_recorded_at'))
        batch_op.drop_index(batch_op.f('ix_vital_signs_patient_id'))

    op.drop_table('vital_signs')
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tasks_patient_id'))

    op.drop_table('tasks')
    op.drop_table('rounding_notes')
    op.drop_table('patient_problem_list')
    with op.batch_alter_table('patient_flags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patient_flags_patient_id'))
        batch_op.drop_index(batch_op.f('ix_patient_flags_flag_type'))

    op.drop_table('patient_flags')
    op.drop_table('patient_allergies')
    op.drop_table('orders')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_related_patient_id'))
        batch_op.drop_index(batch_op.f('ix_notifications_recipient_user_id'))
        batch_op.drop_index(batch_op.f('ix_notifications_notification_type'))
        batch_op.drop_index(batch_op.f('ix_notifications_is_read'))
        batch_op.drop_index(batch_op.f('ix_notifications_created_at'))

    op.drop_table('notifications')
    with op.batch_alter_table('medication_reconciliation_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_medication_reconciliation_logs_reconciliation_type'))
        batch_op.drop_index(batch_op.f('ix_medication_reconciliation_logs_patient_id'))

    op.drop_table('medication_reconciliation_logs')
    op.drop_table('lab_results')
    op.drop_table('imaging_reports')
    with op.batch_alter_table('handoff_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_handoff_entries_written_by_user_id'))
        batch_op.drop_index(batch_op.f('ix_handoff_entries_patient_id'))

    op.drop_table('handoff_entries')
    with op.batch_alter_table('discharge_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_discharge_plans_patient_id'))

    op.drop_table('discharge_plans')
    op.drop_table('clinical_notes')
    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_appointments_status'))
        batch_op.drop_index(batch_op.f('ix_appointments_start_datetime'))
        batch_op.drop_index(batch_op.f('ix_appointments_provider_user_id'))
        batch_op.drop_index(batch_op.f('ix_appointments_patient_id'))

    op.drop_table('appointments')
    op.drop_table('user_roles')
    op.drop_table('user_group_members')
    op.drop_table('role_permissions')
    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patients_mrn'))

    op.drop_table('patients')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_password_reset_token'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_groups_name'))

    op.drop_table('user_groups')
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blacklist_jti'))

    op.drop_table('token_blacklist')
    op.drop_table('roles')
    op.drop_table('permissions')
    with op.batch_alter_table('orderable_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orderable_items_name'))

    op.drop_table('orderable_items')
    with op.batch_alter_table('cds_rules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cds_rules_rule_type'))

    op.drop_table('cds_rules')
    # ### end Alembic commands ###
